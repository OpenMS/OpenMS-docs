=============
Developer FAQ
=============

This FAQ (formerly called Internal FAQ) is intended for developers. Note that some actions require special permissions like e.g. updating the website.

.. contents:: What's on this page

Troubleshooting
***************

OpenMS complains about boost not being found but I'm sure its there!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

``CMake`` got confused. Set up a new build directory and try again. If you build in-source (not recommended), deleting the ``CMakeCache.txt`` and ``cmake`` directory might help.

General information
*******************

I am new to OpenMS. What should I do first?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* Check out the developement version of OpenMS (see website).
* Try and build OpenMS according to the installation instructions.
* Read the OpenMS Coding Convention.
* Read the OpenMS Tutorial.
* Create a GitHub account
* Register to the open-ms-general and open-ms-developers mailing list. (You can see the developers list only if you are logged in to Sourceforge and if you are a OpenMS developer).

What is the difference between an OpenMS tool and util?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A tool starts its lifecycle in UTILS and may exist without being thoroughly tested. Tools may be promoted from UTILS to TOOLS if they are stable enough, are fully tested, fully documented and a test workflow exists.

I have written a class for OpenMS I want to contribute. What should I do?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Basically, you must conform to the OpenMS Coding conventions :

Coding style (brackets, variable names, etc.) must conform to the conventions.

* The class and all the members must be documented thoroughly.
* You can check your code with the tool  ``tools/checker.php``. Call ``php tools/checker.php`` for detailed instructions.

Please open a pull request and follow the `checklist <https://github.com/OpenMS/OpenMS/wiki/Pull-Request-Checklist>`_.

How do I update the `openms.de <https://www.openms.de website>`_ website?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Login to the wordpress admin area at www.openms.de/wp-admin with your username and password assigned by the current Homepage maintainers.

Can I use QT designer to create GUI widgets?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Yes! If you want to create a class called ``Widget: Create .ui-File`` with ``QT designer`` and store it as ``Widget.ui.``, add the class to  ``sources.cmake``.
From the .ui-File the file `include/OpenMS/VISUAL/UIC/ClassTemplate.h` is generated by the build system.
DO NOT CHECK-IN THIS FILE, AS IT IS GENERATED AUTOMATICALLY, WHEN NEEDED!!!
Derive the class ``Widget`` from ``WidgetTemplate``. You need to check in the ``Widget.h`` and ``Widget.cpp`` files.

Can the START_SECTION-macro not handle template methods that have two or more arguments?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Put round brackets around the method declaration. Then it should work.

Where can I find the binary installers created?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

https://abibuilder.informatik.uni-tuebingen.de/archive/openms/OpenMSInstaller/nightly/.
Please verify the creation date of the individual installers, as there may have been an error while creating the installer.

Build system
************

What is cmake?
^^^^^^^^^^^^^^

``CMake`` builds BuildSystems for different platforms, e.g. VisualStudio Solutions on Windows, Makefiles on Linux etc.
This allows us to define in one central location (namely CMakeLists.txt) how OpenMS is build and have the platform specific stuff handled by CMake.
See http://www.cmake.org for more information.

How do I use cmake?
^^^^^^^^^^^^^^^^^^^

See Installation instructions for your platform.
In general, you call ``CMake(.exe)`` with some parameters to create the native build-system.
Afterwards you can (but usually don't have to edit the current configuration using a GUI named ``ccmake`` (or ``CMake-GUI`` in Windows), which ships with ``CMake``).
Note: whenever ``ccmake`` is mentioned in this document, substitute this by ``CMake-GUI`` if your OS is Windows. You can also edit the ``CMakeCache.txt`` file directly.

How do I generate a build-system for Eclipse, KDevelop, CodeBlocks etc?!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Type ``cmake`` into a console. This will list the available code generators available on your platform, which you can pass to ``CMake`` using the ``-G`` option.

What are user definable cMake cache variables?!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

They allow the user to pass options to ``CMake`` which will influence the build system. The most important option which should be given when calling ``CMake.exe`` is:

`CMAKE_FIND_ROOT_PATH`, which is where ``CMake`` will search for additional libraries if they are not found in the default system paths. By default we add `OpenMS/contrib`.

If your have installed all libraries on your system already there is no need to change ``CMAKE_FIND_ROOT_PATH``. If you need the `contrib` libraries, you will need to set this variable.
On Windows, you always need the ``contrib`` folder, as there are no system developer packages. To pass this variable to ``CMake`` use the ``-D`` switch e.g. ``cmake -D CMAKE_FIND_ROOT_PATH:PATH="D:\\somepath\\contrib"``.
Everything else can be edited using ``ccmake`` afterwards.

The following options are of interest:

* ``CMAKE_BUILD_TYPE`` Define if you want to build Debug or Release version of OpenMS. Release is the default.

* ``CMAKE_FIND_ROOT_PATH`` The path to the ``contrib`` libraries. Note that you can also provide more then one value here (e.g., `-D CMAKE_FIND_ROOT_PATH="/path/to/contrib;/usr/"` will search in your `contrib` path and in `/usr` for the required libraries)

* ``STL_DEBUG`` Enables STL debug mode.

* ``DB_TEST`` (deprecated) Enables database testing.

* ``QT_DB_PLUGIN`` (deprecated) Defines the db plugin used by Qt.

* ``MT_CUDA_BUILD_TYPE`` ...

Their description will be displayed when you call ``ccmake``.

Can I use another solver than GLPK?!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Yes, but by default the build system only links against GLPK (this is how OpenMS binary packages must be build!).
To use another solver try ``cmake ... -D USE_COINOR=1 ....`` and look at the documentation of the ``LPWrapper`` class.

How do I switch to Debug/Release configuration?!
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

For Makefile generators (typically on Linux) you can set the ``CMAKE_BUILD_TYPE`` variable to either Debug or Release by calling ``ccmake``.
For Visual Studio, this is not necessary as all configurations are generated and you can choose the one you like within the IDE itself.
The 'Debug' configuration enabled debug information. The 'Release' configuration disables debug information and enables optimization.

I changed the contrib path, but re-running CMake won't change the library paths?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Once a library is found and its location is stored in a cache variable, it will only be searched again if the corresponding entry in the cache file is set to false.
You can simply delete the ``CMakeCache.txt``, but all other custom settings will be lost as well.

What are the most useful (make) targets?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

In Visual Studio you can see all targets on the left. For Makefiles type make help. However, this list is quite long.
The most useful targets will be shown to you by calling the targets target, i.e. make targets.

CMake can't seem to find a Qt library (usually QtCore)! What now?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

``CMake`` finds QT by looking for ``qmake`` in your PATH or for the Environment Variable ``QTDIR``! Set these accordingly.
If the problem still persists: do you have a second installation of Qt (especially the MinGW version?)? This might lead ``CMake`` to the wrong path (it's searching for the ``Qt*.lib`` files).
You should only move/delete the offending Qt version if you know what you are doing!
A save workaround is to edit the ``CMakeCache`` file (e.g. via ``ccmake``) and set all paths relating to QT (e.g. ``QT_LIBRARY_DIR``) manually.

(Windows) What version of Visual Studio should I use?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Use the latest if you can. Get the latest ``CMake``, as its generator needs to support your VS. If your VS is too new and there is no ``CMake`` for that yet, you're gonna be faced with a lot of conversion issues.
This happens whenever the Build-System calls ``CMake`` (which can be quite often, e.g., after changes to ``CMakeLists.txt``).

How do I add a new class MyClass to the build system?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#. Create the new class in the corresponding sub-folder of the sub-project. The header has to be created in ``src/<sub-project>/include/OpenMS`` and the cpp file in ``src/<sub-project>/source``, e.g., src/openms/include/OpenMS/FORMAT/NewFileFormat.h and src/openms/source/FORMAT/NewFileFormat.cpp.
#. Add both to the respective sources.cmake file in the same directory (e.g., ``src/openms/source/FORMAT/`` and ``src/openms/include/OpenMS/FORMAT/``).
#. Add the corresponding class test to src/tests/class_tests/<sub-project>/ (e.g., ``src/tests/class_tests/openms/source/NewFileFormat_test.cpp``).
#. Add the test to the ``executables.cmake`` file in the test folder (e.g., ``src/tests/class_tests/openms/executables.cmake``).
#. Add them to git by using the command ``git add``.

How do I add a new directory MYDIR to the build system?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#. Create two new ``sources.cmake`` files (one for ``src/<sub-project>/include/OpenMS/MYDIR``, one for ``src/<sub-project>/source/MYDIR``), using existing ``sources.cmake`` files as template.
#. Add the new ``sources.cmake`` files to ``src/<sub-project>/includes.cmake``
#. If you created a new directory directly under ``src/openms/source``, then have a look at ``src/tests/class_tests/openms/executables.cmake``.
#. Add a new section that makes the unit testing system aware of the new (upcoming) tests.
#. Look at the very bottom and augment ``TEST_executables``.
#. Add a new group target to ``src/tests/class_tests/openms/CMakeLists.txt``.

Class/Unit tests and TOPP/Tool tests
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Class tests are unit tests that typically test the functionality of a class.

They get build as standalone "additional" executables that include the class to be tested and our own testing utility classes to test outcomes of single functions of the class in question.

Unless you added functions that are intended to be used outside of your new additional mode, you don't need to add anything there.

Tool tests are using the tool executable that the user would also receive. We use those executables to run the full algorithm on a small test dataset, to ensure that from version to version the results stay the same/meaningful.

Each tool test consists of:

* An executable call on a test dataset (by using either fixed command line parameters or an ini file).

* A FuzzyDiff call that compares the temporary output file of the last call and a reference test output that you have to provide.

* a line to add a dependency of the FuzzyDiff call on the actual executable call (so they get executed after each other).

Use e.g., ``ctest -V -R IDMapper`` to only test tests that include the regex ``IDMapper`` (-V is just verbose). Make sure to build the ``IDMapper`` and ``IDMapper_test`` (if edited) executable first everytime.
``ctest`` does not have any automatic dependency on the timestamps of the executables.

How do I add a new test for the class MyClass?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You should always add a test alongside every new class added to OpenMS.

#. Add the class test to ``src/tests/class_tests/<sub-project>/`` (e.g., ``src/tests/class_tests/openms/source/NewFileFormat_test.cpp``).
#. Add the test to the ``executables.cmake`` file in the test folder.
#. Add them to git using the ``git add`` command.

A test template for your specific class can be generated by the ``create_test.php`` script found in ``tools/``.

#. Make sure you generated XML files containing the class information make doc_xml
#. Call:

``php tools/create_test.php /BUILD_DIRECTORY/ /PATH_TO_HEADER/MyClass.h \
  "FIRSTNAME LASTNAME" > ./src/tests/class_tests/openms/source/MyClass_test.cpp``

How do I add a new GUI test (for QT Gui classes) for the class MyClass?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#. Create the MyClass_test.cpp in src/tests/class_tests/openms_gui/source
#. Add it to src/tests/class_tests/openms_gui/CMakeLists.txt in the GUI section.
#. Have a look at existing GUI tests, as they use the QT TestLib framework and not the OpenMS macros.

(Linux) When executing 'make test', all tests fail.
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Please check the ``LD_LIBRARY_PATH`` environment variable:

You can print the ``LD_LIBRARY_PATH`` with ``echo $LD_LIBRARY_PATH``. If your ``/lib/`` folder is included, check that ``libOpenMS.so`` is present.
With the ``ldd`` command, you can show the libraries used by an executable, e.g. ``ldd /bin/ClassTest_test``.

How can I speed up the compile process of OpenMS?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Build with several threads. If you have several processors/cores you can build OpenMS classes/tests and TOPP tools in in several threads. On Linux use the make option -j: make -j8 OpenMS TOPP test_build

On Windows, Visual Studio solution files are automatically build with the /MP flag, such that VS uses all available cores of the machine.

Release
*******

see `Preparation-of-a-new-OpenMS-release <https://github.com/OpenMS/OpenMS/wiki/Preparation-of-a-new-OpenMS-release>`_

Continuous integration
**********************

How does travis work?
^^^^^^^^^^^^^^^^^^^^^

`Travis <https://travis-ci.org/>`_ is an automated system for continuous integration and each new commit and pull request is automatically run through the travis build system.
This is controlled by a ``.travis.yaml`` file in the source tree.

What can we do if travis times out?
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The first thing to try is to simply restart travis, it sometimes hangs and since it builds on shared infrastructure, the next build may work better. This needs to be done by a OpenMS core developer.

Since we use extensive caching, the build may take much longer when many files are touched and may never complete in that case (running into the travis time limit). In that case we can rebuild the cache using the following approach:

.. code:: console

 $ git cherry-pick 89c5cd7f2d9d343b3d63fc6bab18e08dcd969c05

 $ git push origin develop

 # Now wait for the build to complete

 $ git revert 89c5cd7f2d9d343b3d63fc6bab18e08dcd969c05

 $ git push origin develop

Working in IDE's
****************

General:
^^^^^^^^

Why are there no source/TEST and source/APPLICATIONS/TOPP|UTILS folder?
_______________________________________________________________________

All source files added to an IDE are associated with their targets. You can find the source files for each test within its own subproject. The same is true for the ``TOPP`` and ``UTILS`` classes.

How can I easily update a lot of test files (e.g., after a small format change in result files)?
_________________________________________________________________________________________________

Using grep one can simply extract the lines starting with diff FILENAME1 FILENAME2 and replace the diff by copy.
